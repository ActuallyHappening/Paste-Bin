@use '../dependencies/variable' as *;




.marker {
	left: 0;
	pointer-events: none;
	position: absolute;
	top: 0;
}

.marker__label {
	align-items: center;
	backdrop-filter: blur(2px);
	background-color: rgba(51, 51, 51, 0.6);
	border: 2px solid $color--tristsee;
	border-radius: 0.5rem;
	bottom: 0.875rem;
	color: $color--plaster;
	display: flex;
	opacity: 0;
	padding: 0.5rem 1.25rem;
	pointer-events: none;
	position: absolute;
	transform: translateX(-50%);
	transition: opacity 225ms ease-in-out;
	white-space: nowrap;
	z-index: 2;
}

.marker {
	&:hover,
	&:focus-within {
		> .marker__label {
			opacity: 1;
			pointer-events: all;
		}
	}
}

// Animated marker
.marker__pointer {
	--scale: 1;

	cursor: pointer;
	height: 3.25rem;
	pointer-events: all;
	position: absolute;
	transform: translate(-50%, -50%);
	transition: opacity 500ms ease-in-out;
	width: 3.25rem;
	z-index: 1;

	// &::after,
	&::before {
		border-radius: 50%;
		content: '';
		display: block;
		height: 100%;
		position: absolute;
		width: 100%;
	}

	// &::after {
	// 	background-color: $color--plaster;
	// }

	&::before {
		animation: pulse 4s ease-out infinite;
		animation-fill-mode: both;
		border: 2px solid $color--plaster;
		box-sizing: border-box;
	}
}

.marker.is-behind {
	.marker__pointer {
		opacity: 0;
		pointer-events: none;
	}
}

@keyframes pulse {
	0% {
		opacity: 1;
		transform: scale(var(--scale)) scale3d(0.666, 0.666, 1);
	}
	80%, 100% {
		opacity: 0;
		transform: scale(var(--scale)) scale3d(1, 1, 1);
	}
}
